@page "/statistics"

@using Humanizer

@inject NavigationManager NavigationManager
@inject IStatisticsService StatService

<PageTitle>ritsu-pi Statistics</PageTitle>

<MudContainer Class="mt-5" MaxWidth="MaxWidth.Medium">
    <MudText Typo="Typo.h3" Align="Align.Center" GutterBottom="true">Statistics📊</MudText>

    <MudGrid Justify="Justify.Center">
        <MudItem xs="12" Class="mt-6">
            <MudGrid Justify="Justify.Center">
                <MudItem xs="2">
                    <MudCard Class="blue shades-text text-white">
                        <MudCardContent>
                            <MudText Typo="Typo.h4">@stats.ServiceCount</MudText>
                            <MudText Typo="Typo.body2">Services</MudText>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
                <MudItem xs="2">
                    <MudCard Class="green shades-text text-white">
                        <MudCardContent>
                            <MudText Typo="Typo.h4">@stats.ReadyCount</MudText>
                            <MudText Typo="Typo.body2">Ready</MudText>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
                <MudItem xs="2">
                    <MudCard Class="orange shades-text text-white">
                        <MudCardContent>
                            <MudText Typo="Typo.h4">@stats.UnreachableCount</MudText>
                            <MudText Typo="Typo.body2">Unreachable</MudText>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
                <MudItem xs="4">
                    <MudCard Class="blue-grey shades-text text-white">
                        <MudCardContent>
                            <MudText Typo="Typo.h4">@stats.Uptime.Humanize()</MudText>
                            <MudText Typo="Typo.body2">Uptime</MudText>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            </MudGrid>
        </MudItem>
        <MudItem xs="12">
            <ApexCharts.ApexChart TItem="ChartPointData" Title="Latency Graph" XAxisType="ApexCharts.XAxisType.Datetime" Debug>
                @foreach (var item in dataSource)
                {
                    <ApexCharts.ApexPointSeries TItem="ChartPointData"
                         Items="@item.Value"
                         Name="@item.Key"
                         SeriesType="ApexCharts.SeriesType.Line"
                         XValue="@(e => e.Timestamp)"
                         YValue="@(e => e.Latency)"
                         OrderBy="@(e => e.X)" />
               }
            </ApexCharts.ApexChart>
        </MudItem>
        <MudItem xs="2" Class="mb-6">
            <MudButton Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Large" Class="mt-8" StartIcon="@Icons.Material.Filled.Home" OnClick="GoToHome">Home</MudButton>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private ApexCharts.ApexChartOptions<ChartPointData> options = new ApexCharts.ApexChartOptions<ChartPointData>();

    private MonitoringStatistics stats = MonitoringStatistics.Empty;
    private Dictionary<string, List<ChartPointData>> dataSource = new();

    protected override async Task OnInitializedAsync()
    {
        // get stats
        stats = await StatService.GetDashboard();

        // get data from redis
        var chartData = await StatService.GetChartData();

        // set data
        dataSource = new Dictionary<string, List<ChartPointData>>();
        foreach (var item in chartData.ServiceLatency)
        {
            var zipped = chartData.Timestamps.Zip(item.Value).Select(x => new ChartPointData { Latency = x.Second, Timestamp = x.First }).ToList();
            dataSource.Add(item.Key, zipped);
        }

        // set layout
        options.Debug = true;
        options.ForecastDataPoints = new ApexCharts.ForecastDataPoints
        {
            Count = 3,
            DashArray = 4,
            FillOpacity = 0.5,
        };

        // axis
        options.Xaxis = new ApexCharts.XAxis
        {
            Title = new ApexCharts.AxisTitle
            {
                OffsetY = 5,
                Text = "Timestamp",
                Style = new ApexCharts.AxisTitleStyle { FontSize = "14px", Color = "lightgrey" }
            },
            AxisBorder = new ApexCharts.AxisBorder
            {
                Height = 2
            }
        };
        options.Yaxis = new List<ApexCharts.YAxis>
        {
            new ApexCharts.YAxis
            {
                DecimalsInFloat = 0,
                Labels = new ApexCharts.YAxisLabels { Rotate = -45, Style = new ApexCharts.AxisLabelStyle { FontSize = "10px" } },
                Title = new ApexCharts.AxisTitle { Text = "Value", Style = new ApexCharts.AxisTitleStyle { FontSize = "14px", Color = "lightgrey" } }
            }
        };

        // tooltip
        options.Tooltip = new ApexCharts.Tooltip
        {
            X = new ApexCharts.TooltipX { Format = @"hh:mm:ss" }
        };
    }

    void GoToHome()
    {
        NavigationManager.NavigateTo("/");
    }
}
